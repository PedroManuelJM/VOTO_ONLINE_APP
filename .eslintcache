[{"C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\votos-app\\src\\index.js":"1","C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\votos-app\\src\\reportWebVitals.js":"2","C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\votos-app\\src\\Components\\Voto.js":"3","C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\votos-app\\src\\utils\\index.js":"4"},{"size":434,"mtime":1610662142926,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":15643,"mtime":1610736490651,"results":"8","hashOfConfig":"6"},{"size":100,"mtime":1610736826154,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"d6bjyl",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\votos-app\\src\\index.js",[],["20","21"],"C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\votos-app\\src\\reportWebVitals.js",[],"C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\votos-app\\src\\Components\\Voto.js",["22","23","24","25","26","27","28"],"import React, { Component } from 'react';\r\nimport { ApiWebUrl } from '../utils';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPen, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport $ from 'jquery/dist/jquery';\r\nimport img1 from '../assets/img/votopositivo.png';\r\nimport img2 from '../assets/img/resultado.png';\r\nimport img3 from '../assets/img/logogithub.png';\r\nimport swal from 'sweetalert'; /* importando sweealert */\r\nimport { gsap } from \"gsap\";\r\n\r\nexport default class Voto extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            listaPartidos: [],\r\n            listaReportes: [],\r\n            TotalVotos:[],\r\n            partidoSeleccionodaIdpartido: \"\", /* idpartido */\r\n            partidoSeleccionadoNombrepartido: \"\", /* nombre partido */\r\n            partidoSeleccionadoImagen: \"\",  /* imagen partido */\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.obtenerPartidos();\r\n        this.obtenerReportes();\r\n        this.obtenerTotal_Voto();\r\n    }\r\n    obtenerPartidos() {\r\n        const rutaServicio = ApiWebUrl + \"partidos.php\";\r\n        fetch(rutaServicio, {\r\n            'Cache-Control': 'no-cache, must-revalidate', 'Expires': 0,\r\n            method: 'GET',\r\n        })\r\n            .then(\r\n                res => res.json()\r\n            )\r\n            .then(\r\n                (result) => {\r\n                    console.log(result);\r\n                    this.setState({\r\n                        listaPartidos: result\r\n                    })\r\n                }\r\n            )\r\n    }\r\n    obtenerReportes() {\r\n        const rutaServicio = ApiWebUrl + \"resultados.php\";\r\n            fetch(rutaServicio, {\r\n                'Cache-Control': 'no-cache, must-revalidate', 'Expires': 0,\r\n                method: 'GET',\r\n            })\r\n            .then(\r\n                res => res.json()\r\n            )\r\n            .then(\r\n                (result) => {\r\n                    console.log(result);\r\n                    this.setState({\r\n                        listaReportes: result\r\n                    })\r\n                }\r\n            )\r\n    }\r\n    obtenerTotal_Voto() {\r\n        const rutaServicio = ApiWebUrl + \"total_votos.php\";\r\n            fetch(rutaServicio, {\r\n                'Cache-Control': 'no-cache, must-revalidate', 'Expires': 0,\r\n                method: 'GET',\r\n            })\r\n            .then(\r\n                res => res.json()\r\n            )\r\n            .then(\r\n                (result) => {\r\n                    console.log(result);\r\n                    this.setState({\r\n                        TotalVotos: result\r\n                    })\r\n                }\r\n            )\r\n    }\r\n    dibujarPartidos = (datosTablaPartidos) => {\r\n        return (\r\n            <>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row row-cols-1 row-cols-md-4 g-4 border-primary \">\r\n                        {datosTablaPartidos.map(itemPartido =>\r\n                            <div className=\"col image-container\">\r\n                                <div id=\"imagenes\"  className=\"card\" key={itemPartido.idpartido}>\r\n                                      <img  src={ApiWebUrl + 'fotos/' + itemPartido.imagen_partido} className=\"card-img-top img-thumbnail rounded \" alt=\"...\" /> \r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title text-center\">{itemPartido.nombre_partido} </h5>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 text-center\">\r\n                                        <button className=\"btn btn-success btn-lg\" onClick={() => this.mostrarVoto(itemPartido)}> Votar </button>\r\n                                    </div>\r\n                                    <br></br>\r\n                                </div>\r\n                                <br></br>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n    /* Pasando los parametros para Aceptar el voto */\r\n    mostrarVoto(itemPartido) {\r\n        this.setState({\r\n            partidoSeleccionodaIdpartido: itemPartido.idpartido,\r\n            partidoSeleccionadoNombrepartido: itemPartido.nombre_partido,\r\n            partidoSeleccionadoImagen: itemPartido.imagen_partido,\r\n        })\r\n        $(\"#modalConfirmarvoto\").modal();\r\n    }\r\n    mostrarResultado() {\r\n        $(\"#modalReporte\").modal();\r\n    }\r\n    registrarVoto = (e) => {\r\n        const rutaServicio = ApiWebUrl + \"insertar_voto.php\";\r\n        var formData = new FormData();\r\n        formData.append(\"idpartido\", this.state.partidoSeleccionodaIdpartido)\r\n        //Asi se agregan todos los parámetros que el servicio requiera (nombre del parámetro , valor que se envía)  \r\n        fetch(rutaServicio, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n            .then(\r\n                () => {\r\n                    this.obtenerPartidos();\r\n                    this.obtenerReportes();\r\n                    this.obtenerTotal_Voto();\r\n                    $(\"#modalConfirmarvoto\").modal(\"toggle\");\r\n                    swal(\r\n                        {\r\n                            text: \" Se registro sastifactoriamente su voto.\",\r\n                            icon: \"success\",\r\n                            button: \"Ok\",\r\n                            timer: \"3000\",\r\n                        });\r\n                }\r\n            )\r\n    }\r\n    dibujarModalConfirmarVoto() {\r\n        return (\r\n            <div className=\"modal fade\" id=\"modalConfirmarvoto\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header bg-warning\">\r\n                            <div className=\"container text-center\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmación Voto</h5>\r\n                            </div>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"container text-center\">\r\n                                    <div className=\"form-group centered\">\r\n                                        <input type=\"hidden\" className=\"form-control\" value={this.state.partidoSeleccionodaIdpartido} disabled />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <h6> \"{this.state.partidoSeleccionadoNombrepartido}\"</h6>\r\n                                    </div>\r\n                                    <img src={ApiWebUrl + 'fotos/' + this.state.partidoSeleccionadoImagen} className=\"contorno img-thumbnail rounded\" alt=\"...\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Cerrar</button>\r\n                                <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.registrarVoto()}>Aceptar</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    dibujarModalReportes(datosTablaReportes,datoTotalVoto) {\r\n        return (\r\n            <div className=\"modal fade\" id=\"modalReporte\">\r\n                <div className=\"modal-dialog modal-lg modal-dialog-centered\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h4 className=\"modal-title\">Resultados</h4>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\">X</button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row row-cols-1 row-cols-md-4 g-4 border-primary \">\r\n                                    {datosTablaReportes.map(itemReporte =>\r\n                                        <div className=\"col image-container\">\r\n                                            <div className=\"card\" key={itemReporte.idpartido}>\r\n                                            <br></br>\r\n                                                <h6 className=\"card-title text-center\">{itemReporte.nombre_partido} </h6>\r\n                                                <img src={ApiWebUrl + 'fotos/' + itemReporte.imagen_partido} className=\"card-img-top img-thumbnail rounded\" alt=\"...\" />\r\n                                                <div className=\"card-body\">\r\n                                                    <h5 className=\"card-title text-center\" style={{fontSize:12}}>\" {itemReporte.lema_partido} \" </h5>\r\n                                                </div>\r\n                                                <div className=\"col-md-12 text-center\">\r\n                                                    <span className=\"badge badge-info\">Votos : {itemReporte.contador}</span>\r\n                                                </div>\r\n                                                <br></br>\r\n                                            </div>\r\n                                            <br></br>\r\n                                        </div>          \r\n                                    )}       \r\n                                </div>\r\n                                {datoTotalVoto.map(itemVoto =>\r\n                                    <div className=\"container text-center tamano\" key={itemVoto.total_votos}>\r\n                                        <span className=\"badge badge-success\">Total Votos :{itemVoto.total_votos}</span>\r\n                                    </div>\r\n                                )} \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    /* Animation  */\r\n    textoanimation(){\r\n        $('.name_animation').each(function(i) {\r\n            var letter = $(this);\r\n            setTimeout(function() {\r\n                letter.removeClass('transparent');\r\n        \r\n            }, 100 * i);\r\n        });\r\n    } \r\n    /* logo y las imagenes */\r\n    logoanimation(){\r\n        let tl = gsap.timeline({ repeat: -1, repeatDelay: 1 });\r\n        tl.to('#titulo', {\r\n                duration: 2,\r\n                x: 100,\r\n                ease: 'linear'\r\n       });\r\n       let tl2 = gsap.timeline({ repeat: -1, repeatDelay: 1 });   \r\n       tl2.to('#logo', {\r\n       duration: 2,\r\n       rotate: 350\r\n       });\r\n       tl2.to('#logo-github', {\r\n           duration: 2,\r\n           rotate: 360\r\n       });\r\n       tl2.to('#imagenes', {\r\n        duration: 3,\r\n        x:0,\r\n        backgroundColor: '#FFF176',\r\n        borderRadius: '5%',\r\n        border: '5px solid black',\r\n        ease: 'bounce'\r\n      }, '+=1');\r\n\r\n    } \r\n    /* Fin Animation */\r\n    render() {\r\n        let contenidoPartidos = this.dibujarPartidos(this.state.listaPartidos);\r\n        let contenidoModal = this.dibujarModalConfirmarVoto();\r\n        let contenidoModalReporte = this.dibujarModalReportes(this.state.listaReportes,this.state.TotalVotos);\r\n        let mostrarlogoAnimation=this.logoanimation();\r\n        let TextoAnimation=this.textoanimation();\r\n        return (\r\n            <>\r\n                <nav id=\"nav-color\" className=\"navbar navbar-light bg-light\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"navbar-brand\" href=\"#\">\r\n                            <img id=\"logo\" src={img1} alt=\"\" width=\"30\" height=\"24\" className=\"d-inline-block align-top margen logo\" />\r\n                            <label id=\"titulo\"> TU VOTO . APP </label> \r\n                        </a>\r\n                        <button type=\"button\" className=\"btn btn-info\" data-toggle=\"modal\" data-target=\"#modalReporte\">\r\n                            Ver Resultados  <img src={img2} />\r\n                        </button>\r\n\r\n                    </div>\r\n                </nav>\r\n                <section id=\"tabla-categorias\" className=\"padded\">        \r\n                    <div className=\"container\">\r\n                        <br></br>  \r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                {contenidoPartidos}        \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {contenidoModal}\r\n                    {contenidoModalReporte}\r\n                </section>\r\n                <footer id=\"footer\" className=\"padded\">\r\n                    <div className=\"container\">\r\n                        <h6 className=\"text-center\"> 2021 - Todos los derechos reservados </h6>\r\n                        <div className=\"col text-center\">\r\n                            <h4 id=\"name\" className=\"text-center\" >\r\n                                <span> P</span><span className=\"name_animation transparent\">e</span><span className=\"name_animation transparent\">d</span><span className=\"name_animation transparent\">r</span><span className=\"name_animation transparent\">o</span> \r\n                                <span> M</span><span className=\"name_animation transparent\">a</span><span className=\"name_animation transparent\">n</span><span className=\"name_animation transparent\">u</span><span className=\"name_animation transparent\">e</span><span className=\"name_animation transparent\">l</span>\r\n                                <span> A</span><span className=\"name_animation transparent\">n</span><span className=\"name_animation transparent\">t</span><span className=\"name_animation transparent\">o</span><span className=\"name_animation transparent\">n</span><span className=\"name_animation transparent\">i</span><span className=\"name_animation transparent\">o</span>\r\n                                <span> J</span><span className=\"name_animation transparent\">u</span><span className=\"name_animation transparent\">r</span><span className=\"name_animation transparent\">a</span><span className=\"name_animation transparent\">d</span><span className=\"name_animation transparent\">o</span>\r\n                                <span> M</span><span className=\"name_animation transparent\">o</span><span className=\"name_animation transparent\">r</span><span className=\"name_animation transparent\">e</span><span className=\"name_animation transparent\">n</span><span className=\"name_animation transparent\">o </span>\r\n                                <a href=\"https://github.com/PedroManuelJM\" target=\"_blank\"><img id=\"logo-github\" src={img3} /></a>\r\n                            </h4>    \r\n                        </div>\r\n                    </div>\r\n                </footer>\r\n                {mostrarlogoAnimation}\r\n                {TextoAnimation}\r\n            </>\r\n        );\r\n    }\r\n}","C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\votos-app\\src\\utils\\index.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":3,"column":10,"nodeType":"35","messageId":"36","endLine":3,"endColumn":25},{"ruleId":"33","severity":1,"message":"37","line":4,"column":10,"nodeType":"35","messageId":"36","endLine":4,"endColumn":15},{"ruleId":"33","severity":1,"message":"38","line":4,"column":17,"nodeType":"35","messageId":"36","endLine":4,"endColumn":24},{"ruleId":"39","severity":1,"message":"40","line":275,"column":25,"nodeType":"41","endLine":275,"endColumn":62},{"ruleId":"42","severity":1,"message":"43","line":280,"column":45,"nodeType":"41","endLine":280,"endColumn":63},{"ruleId":"44","severity":1,"message":"45","line":307,"column":33,"nodeType":"41","endLine":307,"endColumn":92},{"ruleId":"42","severity":1,"message":"43","line":307,"column":92,"nodeType":"41","endLine":307,"endColumn":127},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'FontAwesomeIcon' is defined but never used.","Identifier","unusedVar","'faPen' is defined but never used.","'faTimes' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation"]